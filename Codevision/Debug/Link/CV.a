;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;char reff[]={0xFE, 0xFD, 0xFB, 0xF7};

	.DSEG
;int keys[]={1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0};
;char seg [] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x67, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71};
;//char seg[] = {0xC0, 0xf9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E};
;unsigned long int temp, key_value;
;unsigned long int i=0, inputcounter=0, ref = 0x01;
;char val[4]={0, 0 , 0, 0} ;
;
;unsigned long int keypad();
;unsigned long int key_pressed;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0012 // Reinitialize Timer 0 value
; 0000 0013     TCNT0=0xA9;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0014     PORTA = ~ref;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0015     PORTB = seg[val[i]];
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0016     ref = ref<<1;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0017     i++;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0018     if (i==4)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0019     {
; 0000 001A         i=0;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001B         ref = 0x01;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001C     }
; 0000 001D }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;
;void display(int value)
; 0000 0020 {
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0021     temp = value;
;PCODE: $0000002F VOL: 0
;	value -> Y+0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0022     val[3] = temp%16; temp = temp/16;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0023     val[2] = temp%16; temp = temp/16;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0024     val[1] = temp%16; temp = temp/16;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0025     val[0] = temp%16;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0026 }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;
;unsigned long int keypad()
; 0000 0029 {
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 002A while(1)
;PCODE: $00000053 VOL: 0
; 0000 002B {
; 0000 002C     int row = 0, col = -1, pos=-1;
; 0000 002D     for(row=0; row<4; row++)
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;	row -> Y+4
;	col -> Y+2
;	pos -> Y+0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 002E     {
; 0000 002F         PORTD = reff[row];
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0030         delay_ms(5);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0031         if(PINC.0==0)
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0032         {
; 0000 0033             while(PINC.0==0);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0034             col=0;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0035             break;
;PCODE: $0000007D VOL: 0
; 0000 0036         }
; 0000 0037         if(PINC.1==0)
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0038         {
; 0000 0039             while(PINC.1==0);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 003A             col=1;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 003B             break;
;PCODE: $0000008A VOL: 0
; 0000 003C         }
; 0000 003D         if(PINC.2==0)
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 003E         {
; 0000 003F             while(PINC.2==0);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0040             col=2;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0041             break;
;PCODE: $00000097 VOL: 0
; 0000 0042         }
; 0000 0043     }
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0044     if(col != -1)
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0045     {
; 0000 0046         pos = row*3+col;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0047         inputcounter = ( inputcounter *10 ) + keys[pos];
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0048         if(pos == 9){
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0049             key_value = ( inputcounter / 10 ) ;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 004A             inputcounter = 0;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 004B         }
; 0000 004C         return key_value;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 004D     }
; 0000 004E }
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 004F }
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;
;void main(void)
; 0000 0052 {
;PCODE: $000000C8 VOL: 0
; 0000 0053 DDRD = 0xFF;    //output
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0054 PORTC = 0xFF;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0055 DDRC = 0x00;    //input
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0056 
; 0000 0057 DDRA = 0xFF;    //output
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0058 DDRB= 0xFF;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0059 
; 0000 005A // Timer/Counter 0 initialization
; 0000 005B // Clock source: System Clock
; 0000 005C // Clock value: 125.000 kHz
; 0000 005D // Mode: Normal top=0xFF
; 0000 005E // OC0 output: Disconnected
; 0000 005F // Timer Period: 0.696 ms
; 0000 0060 
; 0000 0061 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0062 TCNT0=0xA9;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0063 OCR0=0x00;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0064 
; 0000 0065 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0066 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0067 
; 0000 0068 // Global enable interrupts
; 0000 0069 #asm("sei")
;PCODE: $000000DB VOL: 0
	sei
;PCODE: $000000DC VOL: 0
; 0000 006A //
; 0000 006B while (1)  {
;PCODE: $000000DD VOL: 0
; 0000 006C 
; 0000 006D     key_pressed = keypad();
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 006E     display(key_pressed);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 006F }
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0070 }
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;
;
;
;
;
;
